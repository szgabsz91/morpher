description = 'Atomic String Transformation Rule Assembler (ASTRA) based inflection/lemmatization method'

apply from: "$rootDir/gradle/test.gradle"
apply from: "$rootDir/gradle/protobuf.gradle"

ext {
    moduleName = 'com.github.szgabsz91.morpher.methods.astra'
    mockingEnabled = true
    testCoverageLimits = [
        instruction: 98.32,
        line: 98.63,
        branch: 94.62,
        class: 100.0
    ]
}

dependencies {
    compile project(':morpher-core')
    compile project(':morpher-methods:morpher-method-api')

    compile("org.apache.commons:commons-lang3:${commonsLangVersion}")
    compile("org.apache.commons:commons-collections4:${commonsCollectionsVersion}")
    compile("com.github.dpaukov:combinatoricslib3:${combinatoricslibVersion}")
    compile("org.slf4j:slf4j-api:${slf4jVersion}")

    runtime("ch.qos.logback:logback-core:${logbackVersion}")
    runtime("ch.qos.logback:logback-classic:${logbackVersion}")

    testCompile project(':morpher-analyzer-agents:morpher-analyzer-agent-api')
    testCompile project(':morpher-analyzer-agents:morpher-analyzer-agent-hunmorph')
    testCompile("com.github.dpaukov:combinatoricslib3:${combinatoricslibVersion}")
}

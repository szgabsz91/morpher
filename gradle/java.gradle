apply plugin: 'java'

tasks.withType(JavaCompile) {
    sourceCompatibility = project.javaVersion
    targetCompatibility = project.javaVersion
    options.encoding = 'UTF-8'
    options.compilerArgs << '-Xlint:all' << '-Xlint:-requires-automatic' << '-Xlint:-requires-transitive-automatic'
    options.deprecation = true
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

afterEvaluate {
    if (!project.hasProperty('moduleName')) {
        return
    }

    compileJava {
        inputs.property('moduleName', project.moduleName)

        doFirst {
            options.compilerArgs << '--module-path' << classpath.asPath
            classpath = files()
        }
    }

    tasks.withType(Javadoc) {
        source = sourceSets.main.allJava + file('build/generated/source/proto/main/java')
        options.modulePath([file(classpath.asPath)])
        build.dependsOn it
    }
}
